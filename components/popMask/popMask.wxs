var touch = require("touch.wxs");
var hideLength = 40,
    closeTouch = false,
    isAnimating = false,
    endTime = '';

function touchstart(e) {
    var dataSet = e.instance.getDataset();
    closeTouch = dataSet.closetouch;
    hideLength = dataSet.hidelength;
    isAnimating = dataSet.isanimating;
    if (endTime && !isAnimating && (getDate() - endTime < 250)) { //关闭有动画效果200ms，这里防止再次触发
        isAnimating = true;
    } else {
        endTime = '';
    }
    if (closeTouch || isAnimating) {
        return
    }
    touch.onStart(e);
}

function touchmove(e, ins) {
    if (closeTouch || isAnimating) {
        return
    }
    touch.onMove(e, function(deltaY) {
        if (deltaY < 0) deltaY = 0;
        ins.selectComponent('.popup-mask-box').setStyle('-webkit-transform:translate3d(0, ' + deltaY + 'px, 0);transform:translate3d(0, ' + deltaY + 'px, 0);-webkit-transition:none;transition:none;');
    });
}

function touchend(e, ins) {
    if (closeTouch || isAnimating) {
        return
    }
    touch.onEnd(e, function(deltaY) {
        if (deltaY >= hideLength) {
            endTime = getDate();
            ins.callMethod('_cancel');
        } else {
            ins.selectComponent('.popup-mask-box').setStyle('-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);-webkit-transition:transform 200ms ease-out;transition:transform 200ms ease-out;');
        }
    })
}

module.exports = {
    propObserver: function (newValue, oldValue, ins) {
        ins.selectComponent('.popup-mask-box').setStyle(newValue);
    },
    _onStart: touchstart,
    _onMove: touchmove,
    _onEnd: touchend
}